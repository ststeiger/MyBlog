@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />

    <title>NewEntry</title>

    <script src="@Url.Content("~/Scripts/reqwest.js")" charset="utf-8" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/ajax_compat.js")" charset="utf-8" type="text/javascript"></script>
</head>
<body>
    <form action="@Url.Action("AddEntry", "Blog")" method="post" target="_self" >
        <input type="text" id="txtTitle" name="txtTitle" value="" placeholder="Title" style="width: 300px;" />
        <div style="clear: both; height: 10px;">&nbsp;</div>

        <textarea id="taBody" name="taBody" rows="1" cols="1" style="width: 300px; height: 300px;" placeholder="content"></textarea>
        
        <div style="clear: both; height: 10px;">&nbsp;</div>

        <input type="submit" value="submit" />
    </form>

    <div id="divPreview"></div>


    <script type="text/javascript">

        var InstaRequest =
            {
                runningRequests: []

                ,"bind": function (obj, url, targetDiv, fn)
                {
                    var m_parent = this;

                    if (typeof obj == 'string' || obj instanceof String)
                        obj = document.getElementById(obj);

                    if (typeof targetDiv == 'string' || targetDiv instanceof String)
                        targetDiv = document.getElementById(targetDiv);


                    // name of event different, e.g. click vs. onclick
                    if (obj.addEventListener)
                    {
                        // param3: boolean - bubbling/capturing
                        // http://www.w3schools.com/jsref/met_document_addeventlistener.asp
                        obj.addEventListener("keyup", function (e)
                        {
                            console.log("q: " + this.value);
                            // e.preventDefault();
                            
                            if (m_parent.runningRequests[this.id])
                            {
                                // var lol = $.getJSON(url, { q: obj.value }, function (data) { });
                                m_parent.runningRequests[this.id].abort();
                            }

                            if (this.value === null || this.value === "")
                            {
                                var lst; while (lst = targetDiv.lastChild) targetDiv.removeChild(lst);
                                return;
                            }
                            
                            //m_parent.runningRequests[this.id] = $.get(url, { q: obj.value }, fn).request;
                            m_parent.runningRequests[this.id] = $.post(url, { q: encodeURIComponent(obj.value) }, function (data)
                            {
                                console.log("InstaRequest: calling callback fn");
                                // console.log(data);
                                fn(data, targetDiv);
                            }).request;


                            /*
                            m_parent.runningRequests[this.id] = $.get(url, { q: obj.value }, function (data)
                            {
                                console.log("data:");
                                // console.log(data);

                                // Do something here.
                                var last; while (last = targetDiv.lastChild) targetDiv.removeChild(last);

                                console.log("searched for: " + data.searched_for);
                                targetDiv.insertAdjacentHTML('beforeend', data);
                                // InstantSearch.highlight(div, data.searched_for);
                            }).request;
                            */

                            // console.log(InstaRequests[this.id]);
                        });
                    } // End if (obj.addEventListener)
                    else if (obj.attachEvent)
                    {
                        // IE 8
                        // obj.attachEvent("onclick", setCheckedValues);
                    }
                    else
                        console.log("no event listener");
                } // End Function
            }
        ;

        function insertHtml(data, targetDiv)
        {
            console.log("insertHtml");

            // console.log("data:");
            // console.log(data);

            // Do something here.
            var last; while (last = targetDiv.lastChild) targetDiv.removeChild(last);

            targetDiv.insertAdjacentHTML('beforeend', data);
            // InstantSearch.highlight(div, data.searched_for);
        }

        InstaRequest.bind("taBody", "@Url.Action("Preview", "Blog")", "divPreview", insertHtml);
    </script>

</body>
</html>
